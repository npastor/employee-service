version: '3.3'

networks:
  app-tier:
    driver: bridge

services:
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'root'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'test'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'test'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - app-tier

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - "ALLOW_ANONYMOUS_LOGIN=yes"
    networks:
      - app-tier

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - 'zookeeper'
    environment:
      - "HOSTNAME_COMMAND=docker info | grep ^Name: | cut -d' ' -f 2"
      - "KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT"
      - "ALLOW_PLAINTEXT_LISTENER=yes"
      - "KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181"
      - "KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      - "KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092"
      - "KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
    networks:
      - app-tier

  employee-service:
    image: 'employee-service:latest'
    ports:
      - '8080:8080'
    depends_on:
      - 'db'
      - 'kafka'
    networks:
      - app-tier

  events-service:
    image: 'events-service:latest'
    ports:
      - '9090:9090'
    depends_on:
      - 'db'
      - 'kafka'
    networks:
      - app-tier


# Names our volume
volumes:
  my-db: